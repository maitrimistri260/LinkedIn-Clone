{"version":3,"sources":["features/userSlice.js","components/Header/HeaderOption.js","firebase.js","components/Header/Header.js","components/Body/Sidebar/Sidebar.js","components/Body/Feed/InputOption.js","components/Body/Post/Posts.js","components/Body/Feed/Feed.js","components/Login/Login.js","components/Body/Widget/Widget.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["userSlice","createSlice","name","initialState","user","reducers","login","state","action","payload","logout","actions","selectUser","HeaderOption","avatar","Icon","title","onClick","useSelector","className","Avatar","src","photoUrl","email","db","firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","firestore","auth","Header","dispatch","useDispatch","alt","placeholder","type","HomeIcon","SupervisorAccountIcon","BusinessCenterIcon","ChatIcon","NotificationsIcon","signOut","Sidebar","recentItem","topic","displayName","InputOption","color","style","Post","forwardRef","ref","description","message","ThumbUpAltOutlined","ChatOutlined","ShareOutlined","SendOutlined","Feed","useState","input","setInput","posts","setPosts","useEffect","collection","orderBy","onSnapshot","snapshot","docs","map","id","data","value","onChange","e","target","preventDefault","add","timestamp","FieldValue","serverTimestamp","ImageIcon","SubscriptionsIcon","EventNoteIcon","CalendarViewDayIcon","Login","setEmail","password","setPassword","setName","profilePic","setProfilePic","signInWithEmailAndPassword","then","userAuth","uid","profileURL","photoURL","catch","error","alert","createUserWithEmailAndPassword","updateProfile","Widgets","newsArticle","heading","subtitle","App","onAuthStateChanged","store","configureStore","reducer","userReducer","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.bd2ce49a.chunk.js","sourcesContent":["import { createSlice } from '@reduxjs/toolkit';\n\nexport const userSlice = createSlice({\n  name: \"user\",\n  initialState: {\n    user: null,\n  },\n  // The `reducers` field lets us define reducers and generate associated actions\n  reducers: {\n    login: (state, action) => {\n      state.user = action.payload;\n    },\n\n    logout: (state) => {\n      state.user = null;\n    },\n  },\n\n});\n\nexport const { login, logout } = userSlice.actions;\n\n//Selectors\nexport const selectUser = state => state.user.user;\n\n\nexport default userSlice.reducer;\n","import { Avatar } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../../features/userSlice';\r\nimport './HeaderOption.css'\r\n\r\n\r\nfunction HeaderOption({ avatar, Icon, title, onClick }) {\r\n    const user = useSelector(selectUser);\r\n    return (\r\n        <div onClick={onClick} className=\"headerOption\">\r\n            {Icon && <Icon className='headerOption__icon' />}\r\n            {avatar && <Avatar className=\"headerOption__icon\" src={user?.photoUrl}>{user?.email[0]}</Avatar>}\r\n            <h3 className=\"headerOption__title\">{title}</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default HeaderOption;\r\n","import firebase from 'firebase';\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyBlaT1lEukWDE2RsRbSHhsGyjDLRqp-8tY\",\r\n    authDomain: \"linkedin-clone-5609b.firebaseapp.com\",\r\n    projectId: \"linkedin-clone-5609b\",\r\n    storageBucket: \"linkedin-clone-5609b.appspot.com\",\r\n    messagingSenderId: \"92728636319\",\r\n    appId: \"1:92728636319:web:46221d3efd70b4128103aa\",\r\n    measurementId: \"G-SDHHRFWCQ2\"\r\n  };\r\n  \r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\nconst db = firebaseApp.firestore();\r\nconst auth = firebase.auth();\r\n\r\nexport {db, auth};\r\n\r\n","import React from 'react';\r\nimport './Header.css';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport HeaderOption from './HeaderOption';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport SupervisorAccountIcon from '@material-ui/icons/SupervisorAccount';\r\nimport BusinessCenterIcon from '@material-ui/icons/BusinessCenter';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport ChatIcon from '@material-ui/icons/Message';\r\nimport { useDispatch } from 'react-redux';\r\nimport { auth } from '../../firebase';\r\nimport { logout } from '../../features/userSlice';\r\n\r\nconst Header = () => {\r\n    // const user = useSelector(selectUser);\r\n    const dispatch = useDispatch()\r\n\r\n    const logoutOfApp = () => {\r\n        dispatch(logout());\r\n        auth.signOut();\r\n    }\r\n    return (\r\n        \r\n            <div className=\"header\">\r\n                <div className=\"header__left\">\r\n                    <img src=\"https://www.flaticon.com/svg/static/icons/svg/174/174857.svg\" alt=\"\" />\r\n\r\n                    <div className=\"header__search\">\r\n                        <SearchIcon />\r\n                        <input placeholder=\"Search\" type=\"text\" />\r\n\r\n                    </div>\r\n                </div>\r\n                <div className=\"header__right\">\r\n                    <HeaderOption Icon={HomeIcon} title='Home' />\r\n                    <HeaderOption Icon={SupervisorAccountIcon} title='My Network' />\r\n                    <HeaderOption Icon={BusinessCenterIcon} title='Jobs' />\r\n                    <HeaderOption Icon={ChatIcon} title='Messaging' />\r\n                    <HeaderOption Icon={NotificationsIcon} title='Notifications' />\r\n                    <HeaderOption avatar={true} title=\"me\"\r\n                        onClick={logoutOfApp}\r\n                    />\r\n                </div>\r\n\r\n\r\n            </div>\r\n        \r\n    )\r\n}\r\n\r\nexport default Header;","import { Avatar } from '@material-ui/core';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../../../features/userSlice';\r\nimport './Sidebar.css';\r\n\r\n\r\nfunction Sidebar() {\r\n    const user = useSelector(selectUser);\r\n\r\n    const recentItem = (topic) => (\r\n        <div className=\"sidebar__recentItem\">\r\n            <span className=\"sidebar__hash\">#</span>\r\n            <p>{topic}</p>\r\n        </div>\r\n    );\r\n    return (\r\n        <div className=\"sidebar\">\r\n            <div className=\"sidebar__top\">\r\n                <img src=\"https://images.pexels.com/photos/746683/pexels-photo-746683.jpeg?auto=compress&cs=tinysrgb&dpr=1&w=500\" alt=\"coverpics\" />\r\n                <Avatar src={user.photoUrl} className=\"sidebar__avatar\">{user.email[0]}</Avatar>\r\n                <h2>{user.displayName}</h2>\r\n                <h4>{user.email}</h4>\r\n            </div>\r\n\r\n            <div className=\"sidebar__stats\">\r\n                <div className=\"sidebar__stat\">\r\n                    <p>Who viewed you</p>\r\n                    <p className=\"sidebar_statNumber\">2,543</p>\r\n                </div>\r\n\r\n                <div className=\"sidebar__stat\">\r\n                    <p>Views on post</p>\r\n                    <p className=\"sidebar_statNumber\">2,243</p>\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"sidebar__bottom\">\r\n                <p>Recent</p> \r\n                {recentItem('reactjs')}\r\n                {recentItem('programming')}\r\n                {recentItem('software-engineering')}\r\n                {recentItem('design')}\r\n                {recentItem('developer')}                \r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default Sidebar;\r\n","import React from 'react'\r\nimport \"./InputOption.css\"\r\n\r\nfunction InputOption({Icon, title, color}) {\r\n\r\n    return (\r\n        <div className=\"inputOption\">\r\n            <Icon style={{ color: color }}/>\r\n\r\n            <h4>{title}</h4>\r\n            \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default InputOption;\r\n","import { Avatar } from '@material-ui/core';\r\nimport { ChatOutlined, SendOutlined, ShareOutlined, ThumbUpAltOutlined } from '@material-ui/icons';\r\nimport React, { forwardRef } from 'react'\r\nimport InputOption from '../Feed/InputOption';\r\nimport './Post.css';\r\n\r\n\r\nconst Post = forwardRef(({ name, description, message, photoUrl }, ref) => {\r\n    return (\r\n        <div ref={ref} className=\"post\">\r\n            <div className=\"post__header\">\r\n                <Avatar src={photoUrl}>{name[0]}</Avatar>\r\n                <div className=\"post__info\">\r\n                    <h2>{name}</h2>\r\n                    <p>{description}</p>\r\n                </div>\r\n            </div>\r\n            <div className=\"post__body\">\r\n                <p>{message}</p>\r\n            </div>\r\n\r\n            <div className=\"post__buttons\">\r\n                <InputOption Icon={ThumbUpAltOutlined} title=\"Like\" color=\"gray\" />\r\n                <InputOption Icon={ChatOutlined} title=\"Comment\" color=\"gray\" />\r\n                <InputOption Icon={ShareOutlined} title=\"Share\" color=\"gray\" />\r\n                <InputOption Icon={SendOutlined} title=\"Send\" color=\"gray\" />\r\n            </div>\r\n        </div>\r\n    )\r\n});\r\n\r\nexport default Post\r\n","import React, { useState, useEffect } from 'react';\r\nimport './Feed.css'\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport InputOption from './InputOption';\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport SubscriptionsIcon from \"@material-ui/icons/Subscriptions\";\r\nimport EventNoteIcon from '@material-ui/icons/EventNote';\r\nimport CalendarViewDayIcon from '@material-ui/icons/CalendarViewDay';\r\nimport Post from '../Post/Posts';\r\nimport { db } from '../../../firebase';\r\nimport firebase from 'firebase';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectUser } from '../../../features/userSlice';\r\nimport FlipMove from 'react-flip-move';\r\n\r\n\r\n\r\n\r\nfunction Feed() {\r\n    const user = useSelector(selectUser);\r\n    const [input, setInput] = useState('');\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        db.collection(\"posts\").orderBy('timestamp', 'desc').onSnapshot(snapshot => (\r\n            setPosts(snapshot.docs.map(docs => (\r\n                {\r\n                    id: docs.id,\r\n                    data: docs.data()\r\n                }\r\n            )))\r\n        ));\r\n    }, [])\r\n\r\n\r\n    const sendPost = e => {\r\n        e.preventDefault();\r\n\r\n        db.collection('posts').add({\r\n            name: user.displayName,\r\n            description: user.email,\r\n            message: input,\r\n            photoUrl: user.photoUrl,\r\n            timestamp: firebase.firestore.FieldValue.serverTimestamp()\r\n\r\n        });\r\n        setInput(\"\");\r\n\r\n    }\r\n    return (\r\n        <div className=\"feed\">\r\n            <div className=\"feed_inputContainer\">\r\n                <div className=\"feed__input\">\r\n                    <CreateIcon />\r\n                    <form >\r\n                        <input value={input} onChange={e => setInput(e.target.value)} type=\"text\" />\r\n                        <button onClick={sendPost} type=\"submit\">Send</button>\r\n                    </form>\r\n                </div>\r\n                <div className=\"feed__inputOptions\">\r\n                    <InputOption Icon={ImageIcon} title=\"Photo\" color=\"#70B5F9\" />\r\n                    <InputOption Icon={SubscriptionsIcon} title=\"Video\" color=\"#E7A33E\" />\r\n                    <InputOption Icon={EventNoteIcon} title=\"Event\" color=\"#COCBCD\" />\r\n                    <InputOption Icon={CalendarViewDayIcon} title=\"Write article\" color=\"#7FC15E\" />\r\n                </div>\r\n            </div>\r\n\r\n            {/* Posts */}\r\n            <FlipMove>\r\n            {posts.map(({id, data: {name, description, message, photoUrl}}) => (\r\n                <Post \r\n                    key={id}\r\n                    name = {name}\r\n                    description = {description}\r\n                    message = {message}\r\n                    photoUrl = {photoUrl}\r\n\r\n                />\r\n            ))}\r\n            </FlipMove>\r\n            \r\n            \r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Feed;\r\n","import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { auth } from '../../firebase';\r\nimport './Login.css';\r\nimport { login } from \"../../features/userSlice\";\r\n\r\nfunction Login() {\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const [name, setName] = useState(\"\");\r\n    const [profilePic, setProfilePic] = useState(\"\");\r\n\r\n    const dispatch = useDispatch();\r\n\r\n\r\n    const loginToApp = e => {\r\n        e.preventDefault();\r\n\r\n        auth.signInWithEmailAndPassword(email, password)\r\n            .then(userAuth => {\r\n                dispatch(login({\r\n                    email: userAuth.user.email,\r\n                    uid: userAuth.user.uid,\r\n                    displayName: userAuth.user.displayName,\r\n                    profileURL: userAuth.user.photoURL,\r\n                }))\r\n            }).catch((error) => alert(error));\r\n    };\r\n\r\n    const register = () => {\r\n        if (!name) {\r\n            return alert(\"Please enter a full name\");\r\n        };\r\n\r\n        auth.createUserWithEmailAndPassword(email, password)\r\n            .then((userAuth) => {\r\n                userAuth.user.updateProfile({\r\n                    displayName: name,\r\n                    photoURL: profilePic,\r\n                })\r\n                    .then(() => {\r\n                        dispatch(login({\r\n                            email: userAuth.user.email,\r\n                            uid: userAuth.user.uid,\r\n                            displayName: name,\r\n                            photoURL: profilePic,\r\n\r\n                        }));\r\n                    });\r\n            }).catch(error => alert(error));\r\n    };\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"login\">\r\n            <h1>You are not logged in</h1>\r\n            <img src=\"https://news.hitb.org/sites/default/files/styles/large/public/field/image/500px-LinkedIn_Logo.svg__1.png?itok=q_lR0Vks\" alt=\"logo\" />\r\n\r\n            <form>\r\n                <input\r\n                    value={name}\r\n                    onChange={e => setName(e.target.value)}\r\n                    placeholder=\"Full Name (required if registering)\" type=\"text\"\r\n                />\r\n                <input\r\n                    value={profilePic}\r\n                    onChange={e => setProfilePic(e.target.value)} placeholder=\"Profile picture URL (optional)\"\r\n                    type=\"text\"\r\n                />\r\n                <input\r\n                    value={email}\r\n                    onChange={e => setEmail(e.target.value)} placeholder=\"Email\"\r\n                    type=\"email\"\r\n                />\r\n                <input\r\n                    value={password}\r\n                    onChange={e => setPassword(e.target.value)} placeholder=\"Password\"\r\n                    type=\"password\"\r\n                />\r\n\r\n                <button type=\"submit\" onClick={loginToApp}>Sign In</button>\r\n                <p>\r\n                    Not a member? {\" \"}\r\n                    <span className=\"login__register\" onClick={register}> Register Now</span>\r\n                </p>\r\n\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login;\r\n","import React from 'react';\r\nimport './Widget.css';\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport  FiberManualRecordIcon  from '@material-ui/icons/FiberManualRecord';\r\n\r\nfunction Widgets() {\r\n\r\n    const newsArticle = (heading, subtitle) => (\r\n        <div className=\"widgets_article\">\r\n            <div className=\"widgets_articleleft\">\r\n                <FiberManualRecordIcon />\r\n            </div>\r\n            <div className=\"widgets_articleright\">\r\n                <h4>{heading}</h4>\r\n                <p>{subtitle}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n    return (\r\n        <div className=\"widgets\">\r\n            <div className=\"widgets_header\">\r\n                <h2>LinkedIn News</h2>\r\n                <InfoIcon></InfoIcon>\r\n            </div>\r\n            {newsArticle(\"Coronavirus: Lagos updates\", \"Tops news - 324 readers\")}\r\n      {newsArticle(\"Bitcoin hits new high\", \"Tops news - 2,324 readers\")}\r\n\r\n      {newsArticle(\"BBC News (World)\", \"US orders civilian jets to join Afghan evacuation\")}\r\n\r\n      {newsArticle(\"AFP News Agency\", \"Taliban says 'hundreds of fighters' heading for holdout Panjshir Valley\")}\r\n\r\n      {newsArticle(\"Dogecoin\", \"I see big things coming in doge.RocketRocketRocket #Dogecoins\")}\r\n        </div>\r\n\r\n       \r\n    )\r\n}\r\n\r\nexport default Widgets;\r\n","import React from 'react';\nimport './App.css';\nimport  Header  from './components/Header/Header';\nimport Sidebar from './components/Body/Sidebar/Sidebar';\nimport Feed from './components/Body/Feed/Feed';\nimport Login from './components/Login/Login';\nimport { useEffect } from 'react';\nimport { auth } from './firebase';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { login, logout, selectUser} from \"./features/userSlice\";\nimport Widgets from './components/Body/Widget/Widget';\n// import { login } from \"./features/userSlice\";\n\n\nfunction App() {\n\n  const user = useSelector(selectUser);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    auth.onAuthStateChanged(userAuth => {\n      if (userAuth) {\n        //user is logged in\n        dispatch(login({\n            email: userAuth.email,\n            uid: userAuth.uid,\n            displayName: userAuth.displayName,\n            photoUrl: userAuth.photoURL,\n        }))\n      } else {\n        //user is logged out\n        dispatch(logout());\n      }\n    })\n  }, [dispatch]);\n\n  return (\n    <div className=\"app\">\n\n      {/* Header */}\n      <Header />\n\n      {!user ? (\n        <Login />\n      ) : (\n        <div className=\"app__body\">\n          <Sidebar />\n          <Feed />\n          <Widgets/>\n        </div>\n      )}\n      {/* App Body */}\n\n\n\n    </div>\n  );\n}\n\nexport default App;\n","import { configureStore } from '@reduxjs/toolkit';\nimport userReducer from '../features/userSlice';\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './app/store';\nimport { Provider } from 'react-redux';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}